# ワークフローの名前
name: Create Release with ISO (Manual)

# ワークフローが実行されるタイミングを定義
on:
  # GitHubのActionsタブから手動で実行できるようにする
  workflow_dispatch:
    # 手動実行時にユーザーが入力するパラメータを定義
    inputs:
      tag:
        description: '作成するリリースのタグ名 (例: v1.0.0 や my release)'
        required: true
        type: string
      release_name:
        description: '作成するリリースの名前 (例: Version 1.0.0)'
        required: true
        type: string

# 実行するジョブを定義
jobs:
  build-and-release:
    # ジョブの名前
    name: Build ISO and Create Release
    # 実行環境としてUbuntuの最新版を指定
    runs-on: ubuntu-latest
    # このジョブはリポジトリへの書き込み（リリース作成）権限が必要
    permissions:
      contents: write

    # ジョブのステップ
    steps:
      # 1. リポジトリのコードをチェックアウトする
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. ISO作成ツール (genisoimage) をインストールする
      - name: Install genisoimage
        run: |
          sudo apt-get update
          sudo apt-get install -y genisoimage

      # 3. ISOファイルに含めるファイルを一時的に格納するディレクトリを作成
      - name: Create staging directory
        run: mkdir staging

      # 4. リポジトリ内を再帰的に検索し、.exeと.dllファイルを見つけてstagingディレクトリにコピー
      - name: Find and copy exe/dll files
        run: find . -type f \( -name "*.exe" -o -name "*.dll" \) | xargs -I {} cp {} staging/

      # ✨✨ ここから修正箇所 ✨✨

      # 5. タグ名として無効な文字を置換するステップを追加
      - name: Sanitize tag name
        id: sanitize_tag
        run: |
          # 入力されたタグに含まれるスペースをハイフンに置換する
          TAG_NAME="${{ github.event.inputs.tag }}"
          SANITIZED_TAG="${TAG_NAME// /-}"
          echo "value=${SANITIZED_TAG}" >> $GITHUB_OUTPUT

      # 6. genisoimageツールを使ってISOファイルを作成
      - name: Create ISO image
        # 置換後のタグ名を使ってISOファイルを作成する
        run: genisoimage -o "application-${{ steps.sanitize_tag.outputs.value }}.iso" -J -R staging

      # 7. 入力された情報を使って新しいリリースを作成する
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # 置換後のタグ名を tag_name として使用する
          tag_name: ${{ steps.sanitize_tag.outputs.value }}
          release_name: ${{ github.event.inputs.release_name }}
          body: 'This release was automatically generated by GitHub Actions.'
          draft: false
          prerelease: false

      # 8. 作成したISOファイルを、上記で作成した新しいリリースにアップロード
      - name: Upload ISO to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # こちらも置換後のタグ名を使ったファイルパスを指定する
          asset_path: ./"application-${{ steps.sanitize_tag.outputs.value }}.iso"
          asset_name: application-${{ steps.sanitize_tag.outputs.value }}.iso
          asset_content_type: application/x-iso9660-image
