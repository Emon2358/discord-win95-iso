# ワークフローの名前
name: Create Release with ISO (Manual)

# ワークフローが実行されるタイミングを定義
on:
  # GitHubのActionsタブから手動で実行できるようにする
  workflow_dispatch:
    # 手動実行時にユーザーが入力するパラメータを定義
    inputs:
      tag:
        description: '作成するリリースのタグ名 (例: v1.0.0)'
        required: true
        type: string
      release_name:
        description: '作成するリリースの名前 (例: Version 1.0.0)'
        required: true
        type: string

# 実行するジョブを定義
jobs:
  build-and-release:
    # ジョブの名前
    name: Build ISO and Create Release
    # 実行環境としてUbuntuの最新版を指定
    runs-on: ubuntu-latest
    # このジョブはリポジトリへの書き込み（リリース作成）権限が必要
    permissions:
      contents: write

    # ジョブのステップ
    steps:
      # 1. リポジトリのコードをチェックアウトする
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. ISO作成ツール (genisoimage) をインストールする
      - name: Install genisoimage
        run: |
          sudo apt-get update
          sudo apt-get install -y genisoimage

      # 3. ISOファイルに含めるファイルを一時的に格納するディレクトリを作成
      - name: Create staging directory
        run: mkdir staging

      # 4. リポジトリ内を再帰的に検索し、.exeと.dllファイルを見つけてstagingディレクトリにコピー
      - name: Find and copy exe/dll files
        run: find . -type f \( -name "*.exe" -o -name "*.dll" \) | xargs -I {} cp {} staging/

      # 5. genisoimageツールを使ってISOファイルを作成
      - name: Create ISO image
        # ファイル名にスペースが含まれる可能性を考慮し、ダブルクォーテーションで囲む
        run: genisoimage -o "application-${{ github.event.inputs.tag }}.iso" -J -R staging

      # 6. 入力された情報を使って新しいリリースを作成する
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: ${{ github.event.inputs.release_name }}
          body: 'This release was automatically generated by GitHub Actions.'
          draft: false
          prerelease: false

      # 7. 作成したISOファイルを、上記で作成した新しいリリースにアップロード
      - name: Upload ISO to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # ✨✨ ここを修正しました ✨✨
          # 重複していた asset_path キーを一つにまとめました。
          asset_path: ./"application-${{ github.event.inputs.tag }}.iso"
          asset_name: application-${{ github.event.inputs.tag }}.iso
          asset_content_type: application/x-iso9660-image
